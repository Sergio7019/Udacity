{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "\n",
    "\n",
    "# Project: Investigate a Dataset (Replace this with something more specific!)\n",
    "\n",
    "## Table of Contents\n",
    "<ul>\n",
    "<li><a href=\"#intro\">Introduction</a></li>\n",
    "<li><a href=\"#wrangling\">Data Wrangling</a></li>\n",
    "<li><a href=\"#eda\">Exploratory Data Analysis</a></li>\n",
    "<li><a href=\"#conclusions\">Conclusions</a></li>\n",
    "</ul>"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<a id='intro'></a>\n",
    "## Introduction\n",
    "\n",
    "> **Tip**: In this section of the report, you will load in the data, check for cleanliness, and then trim and clean your dataset for analysis. Make sure that you document your steps carefully and justify your cleaning decisions.\n",
    "\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Use this cell to set up import statements for all of the packages that you\n",
    "#   plan to use.\n",
    "\n",
    "# Remember to include a 'magic word' so that your visualizations are plotted\n",
    "#   inline with the notebook. See this page for more:\n",
    "#   http://ipython.readthedocs.io/en/stable/interactive/magics.html\n",
    "import pandas as pd\n",
    "import numpy as np\n",
    "import matplotlib as plt\n",
    "import matplotlib.pyplot as plt\n",
    "%matplotlib inline"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<a id='wrangling'></a>\n",
    "## Data Wrangling\n",
    "\n",
    "> **Tip**: In this section of the report, you will load in the data, check for cleanliness, and then trim and clean your dataset for analysis. Make sure that you document your steps carefully and justify your cleaning decisions.\n",
    "\n",
    "### General Properties"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>id</th>\n",
       "      <th>imdb_id</th>\n",
       "      <th>popularity</th>\n",
       "      <th>budget</th>\n",
       "      <th>revenue</th>\n",
       "      <th>original_title</th>\n",
       "      <th>cast</th>\n",
       "      <th>homepage</th>\n",
       "      <th>director</th>\n",
       "      <th>tagline</th>\n",
       "      <th>...</th>\n",
       "      <th>overview</th>\n",
       "      <th>runtime</th>\n",
       "      <th>genres</th>\n",
       "      <th>production_companies</th>\n",
       "      <th>release_date</th>\n",
       "      <th>vote_count</th>\n",
       "      <th>vote_average</th>\n",
       "      <th>release_year</th>\n",
       "      <th>budget_adj</th>\n",
       "      <th>revenue_adj</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>135397</td>\n",
       "      <td>tt0369610</td>\n",
       "      <td>32.985763</td>\n",
       "      <td>150000000</td>\n",
       "      <td>1513528810</td>\n",
       "      <td>Jurassic World</td>\n",
       "      <td>Chris Pratt|Bryce Dallas Howard|Irrfan Khan|Vi...</td>\n",
       "      <td>http://www.jurassicworld.com/</td>\n",
       "      <td>Colin Trevorrow</td>\n",
       "      <td>The park is open.</td>\n",
       "      <td>...</td>\n",
       "      <td>Twenty-two years after the events of Jurassic ...</td>\n",
       "      <td>124</td>\n",
       "      <td>Action|Adventure|Science Fiction|Thriller</td>\n",
       "      <td>Universal Studios|Amblin Entertainment|Legenda...</td>\n",
       "      <td>6/9/15</td>\n",
       "      <td>5562</td>\n",
       "      <td>6.5</td>\n",
       "      <td>2015</td>\n",
       "      <td>1.379999e+08</td>\n",
       "      <td>1.392446e+09</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>76341</td>\n",
       "      <td>tt1392190</td>\n",
       "      <td>28.419936</td>\n",
       "      <td>150000000</td>\n",
       "      <td>378436354</td>\n",
       "      <td>Mad Max: Fury Road</td>\n",
       "      <td>Tom Hardy|Charlize Theron|Hugh Keays-Byrne|Nic...</td>\n",
       "      <td>http://www.madmaxmovie.com/</td>\n",
       "      <td>George Miller</td>\n",
       "      <td>What a Lovely Day.</td>\n",
       "      <td>...</td>\n",
       "      <td>An apocalyptic story set in the furthest reach...</td>\n",
       "      <td>120</td>\n",
       "      <td>Action|Adventure|Science Fiction|Thriller</td>\n",
       "      <td>Village Roadshow Pictures|Kennedy Miller Produ...</td>\n",
       "      <td>5/13/15</td>\n",
       "      <td>6185</td>\n",
       "      <td>7.1</td>\n",
       "      <td>2015</td>\n",
       "      <td>1.379999e+08</td>\n",
       "      <td>3.481613e+08</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>262500</td>\n",
       "      <td>tt2908446</td>\n",
       "      <td>13.112507</td>\n",
       "      <td>110000000</td>\n",
       "      <td>295238201</td>\n",
       "      <td>Insurgent</td>\n",
       "      <td>Shailene Woodley|Theo James|Kate Winslet|Ansel...</td>\n",
       "      <td>http://www.thedivergentseries.movie/#insurgent</td>\n",
       "      <td>Robert Schwentke</td>\n",
       "      <td>One Choice Can Destroy You</td>\n",
       "      <td>...</td>\n",
       "      <td>Beatrice Prior must confront her inner demons ...</td>\n",
       "      <td>119</td>\n",
       "      <td>Adventure|Science Fiction|Thriller</td>\n",
       "      <td>Summit Entertainment|Mandeville Films|Red Wago...</td>\n",
       "      <td>3/18/15</td>\n",
       "      <td>2480</td>\n",
       "      <td>6.3</td>\n",
       "      <td>2015</td>\n",
       "      <td>1.012000e+08</td>\n",
       "      <td>2.716190e+08</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>140607</td>\n",
       "      <td>tt2488496</td>\n",
       "      <td>11.173104</td>\n",
       "      <td>200000000</td>\n",
       "      <td>2068178225</td>\n",
       "      <td>Star Wars: The Force Awakens</td>\n",
       "      <td>Harrison Ford|Mark Hamill|Carrie Fisher|Adam D...</td>\n",
       "      <td>http://www.starwars.com/films/star-wars-episod...</td>\n",
       "      <td>J.J. Abrams</td>\n",
       "      <td>Every generation has a story.</td>\n",
       "      <td>...</td>\n",
       "      <td>Thirty years after defeating the Galactic Empi...</td>\n",
       "      <td>136</td>\n",
       "      <td>Action|Adventure|Science Fiction|Fantasy</td>\n",
       "      <td>Lucasfilm|Truenorth Productions|Bad Robot</td>\n",
       "      <td>12/15/15</td>\n",
       "      <td>5292</td>\n",
       "      <td>7.5</td>\n",
       "      <td>2015</td>\n",
       "      <td>1.839999e+08</td>\n",
       "      <td>1.902723e+09</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>168259</td>\n",
       "      <td>tt2820852</td>\n",
       "      <td>9.335014</td>\n",
       "      <td>190000000</td>\n",
       "      <td>1506249360</td>\n",
       "      <td>Furious 7</td>\n",
       "      <td>Vin Diesel|Paul Walker|Jason Statham|Michelle ...</td>\n",
       "      <td>http://www.furious7.com/</td>\n",
       "      <td>James Wan</td>\n",
       "      <td>Vengeance Hits Home</td>\n",
       "      <td>...</td>\n",
       "      <td>Deckard Shaw seeks revenge against Dominic Tor...</td>\n",
       "      <td>137</td>\n",
       "      <td>Action|Crime|Thriller</td>\n",
       "      <td>Universal Pictures|Original Film|Media Rights ...</td>\n",
       "      <td>4/1/15</td>\n",
       "      <td>2947</td>\n",
       "      <td>7.3</td>\n",
       "      <td>2015</td>\n",
       "      <td>1.747999e+08</td>\n",
       "      <td>1.385749e+09</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows Ã— 21 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "       id    imdb_id  popularity     budget     revenue  \\\n",
       "0  135397  tt0369610   32.985763  150000000  1513528810   \n",
       "1   76341  tt1392190   28.419936  150000000   378436354   \n",
       "2  262500  tt2908446   13.112507  110000000   295238201   \n",
       "3  140607  tt2488496   11.173104  200000000  2068178225   \n",
       "4  168259  tt2820852    9.335014  190000000  1506249360   \n",
       "\n",
       "                 original_title  \\\n",
       "0                Jurassic World   \n",
       "1            Mad Max: Fury Road   \n",
       "2                     Insurgent   \n",
       "3  Star Wars: The Force Awakens   \n",
       "4                     Furious 7   \n",
       "\n",
       "                                                cast  \\\n",
       "0  Chris Pratt|Bryce Dallas Howard|Irrfan Khan|Vi...   \n",
       "1  Tom Hardy|Charlize Theron|Hugh Keays-Byrne|Nic...   \n",
       "2  Shailene Woodley|Theo James|Kate Winslet|Ansel...   \n",
       "3  Harrison Ford|Mark Hamill|Carrie Fisher|Adam D...   \n",
       "4  Vin Diesel|Paul Walker|Jason Statham|Michelle ...   \n",
       "\n",
       "                                            homepage          director  \\\n",
       "0                      http://www.jurassicworld.com/   Colin Trevorrow   \n",
       "1                        http://www.madmaxmovie.com/     George Miller   \n",
       "2     http://www.thedivergentseries.movie/#insurgent  Robert Schwentke   \n",
       "3  http://www.starwars.com/films/star-wars-episod...       J.J. Abrams   \n",
       "4                           http://www.furious7.com/         James Wan   \n",
       "\n",
       "                         tagline  ...  \\\n",
       "0              The park is open.  ...   \n",
       "1             What a Lovely Day.  ...   \n",
       "2     One Choice Can Destroy You  ...   \n",
       "3  Every generation has a story.  ...   \n",
       "4            Vengeance Hits Home  ...   \n",
       "\n",
       "                                            overview runtime  \\\n",
       "0  Twenty-two years after the events of Jurassic ...     124   \n",
       "1  An apocalyptic story set in the furthest reach...     120   \n",
       "2  Beatrice Prior must confront her inner demons ...     119   \n",
       "3  Thirty years after defeating the Galactic Empi...     136   \n",
       "4  Deckard Shaw seeks revenge against Dominic Tor...     137   \n",
       "\n",
       "                                      genres  \\\n",
       "0  Action|Adventure|Science Fiction|Thriller   \n",
       "1  Action|Adventure|Science Fiction|Thriller   \n",
       "2         Adventure|Science Fiction|Thriller   \n",
       "3   Action|Adventure|Science Fiction|Fantasy   \n",
       "4                      Action|Crime|Thriller   \n",
       "\n",
       "                                production_companies release_date vote_count  \\\n",
       "0  Universal Studios|Amblin Entertainment|Legenda...       6/9/15       5562   \n",
       "1  Village Roadshow Pictures|Kennedy Miller Produ...      5/13/15       6185   \n",
       "2  Summit Entertainment|Mandeville Films|Red Wago...      3/18/15       2480   \n",
       "3          Lucasfilm|Truenorth Productions|Bad Robot     12/15/15       5292   \n",
       "4  Universal Pictures|Original Film|Media Rights ...       4/1/15       2947   \n",
       "\n",
       "   vote_average  release_year    budget_adj   revenue_adj  \n",
       "0           6.5          2015  1.379999e+08  1.392446e+09  \n",
       "1           7.1          2015  1.379999e+08  3.481613e+08  \n",
       "2           6.3          2015  1.012000e+08  2.716190e+08  \n",
       "3           7.5          2015  1.839999e+08  1.902723e+09  \n",
       "4           7.3          2015  1.747999e+08  1.385749e+09  \n",
       "\n",
       "[5 rows x 21 columns]"
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Load your data and print out a few lines. Perform operations to inspect data\n",
    "#   types and look for instances of missing or possibly errant data.\n",
    "df=pd.read_csv('tmdb-movies.csv')\n",
    "df.head(5)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 10866 entries, 0 to 10865\n",
      "Data columns (total 21 columns):\n",
      "id                      10866 non-null int64\n",
      "imdb_id                 10856 non-null object\n",
      "popularity              10866 non-null float64\n",
      "budget                  10866 non-null int64\n",
      "revenue                 10866 non-null int64\n",
      "original_title          10866 non-null object\n",
      "cast                    10790 non-null object\n",
      "homepage                2936 non-null object\n",
      "director                10822 non-null object\n",
      "tagline                 8042 non-null object\n",
      "keywords                9373 non-null object\n",
      "overview                10862 non-null object\n",
      "runtime                 10866 non-null int64\n",
      "genres                  10843 non-null object\n",
      "production_companies    9836 non-null object\n",
      "release_date            10866 non-null object\n",
      "vote_count              10866 non-null int64\n",
      "vote_average            10866 non-null float64\n",
      "release_year            10866 non-null int64\n",
      "budget_adj              10866 non-null float64\n",
      "revenue_adj             10866 non-null float64\n",
      "dtypes: float64(4), int64(6), object(11)\n",
      "memory usage: 1.7+ MB\n"
     ]
    }
   ],
   "source": [
    "df.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>id</th>\n",
       "      <th>popularity</th>\n",
       "      <th>budget</th>\n",
       "      <th>revenue</th>\n",
       "      <th>runtime</th>\n",
       "      <th>vote_count</th>\n",
       "      <th>vote_average</th>\n",
       "      <th>release_year</th>\n",
       "      <th>budget_adj</th>\n",
       "      <th>revenue_adj</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>count</th>\n",
       "      <td>10866.000000</td>\n",
       "      <td>10866.000000</td>\n",
       "      <td>1.086600e+04</td>\n",
       "      <td>1.086600e+04</td>\n",
       "      <td>10866.000000</td>\n",
       "      <td>10866.000000</td>\n",
       "      <td>10866.000000</td>\n",
       "      <td>10866.000000</td>\n",
       "      <td>1.086600e+04</td>\n",
       "      <td>1.086600e+04</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>mean</th>\n",
       "      <td>66064.177434</td>\n",
       "      <td>0.646441</td>\n",
       "      <td>1.462570e+07</td>\n",
       "      <td>3.982332e+07</td>\n",
       "      <td>102.070863</td>\n",
       "      <td>217.389748</td>\n",
       "      <td>5.974922</td>\n",
       "      <td>2001.322658</td>\n",
       "      <td>1.755104e+07</td>\n",
       "      <td>5.136436e+07</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>std</th>\n",
       "      <td>92130.136561</td>\n",
       "      <td>1.000185</td>\n",
       "      <td>3.091321e+07</td>\n",
       "      <td>1.170035e+08</td>\n",
       "      <td>31.381405</td>\n",
       "      <td>575.619058</td>\n",
       "      <td>0.935142</td>\n",
       "      <td>12.812941</td>\n",
       "      <td>3.430616e+07</td>\n",
       "      <td>1.446325e+08</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>min</th>\n",
       "      <td>5.000000</td>\n",
       "      <td>0.000065</td>\n",
       "      <td>0.000000e+00</td>\n",
       "      <td>0.000000e+00</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>10.000000</td>\n",
       "      <td>1.500000</td>\n",
       "      <td>1960.000000</td>\n",
       "      <td>0.000000e+00</td>\n",
       "      <td>0.000000e+00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25%</th>\n",
       "      <td>10596.250000</td>\n",
       "      <td>0.207583</td>\n",
       "      <td>0.000000e+00</td>\n",
       "      <td>0.000000e+00</td>\n",
       "      <td>90.000000</td>\n",
       "      <td>17.000000</td>\n",
       "      <td>5.400000</td>\n",
       "      <td>1995.000000</td>\n",
       "      <td>0.000000e+00</td>\n",
       "      <td>0.000000e+00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50%</th>\n",
       "      <td>20669.000000</td>\n",
       "      <td>0.383856</td>\n",
       "      <td>0.000000e+00</td>\n",
       "      <td>0.000000e+00</td>\n",
       "      <td>99.000000</td>\n",
       "      <td>38.000000</td>\n",
       "      <td>6.000000</td>\n",
       "      <td>2006.000000</td>\n",
       "      <td>0.000000e+00</td>\n",
       "      <td>0.000000e+00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75%</th>\n",
       "      <td>75610.000000</td>\n",
       "      <td>0.713817</td>\n",
       "      <td>1.500000e+07</td>\n",
       "      <td>2.400000e+07</td>\n",
       "      <td>111.000000</td>\n",
       "      <td>145.750000</td>\n",
       "      <td>6.600000</td>\n",
       "      <td>2011.000000</td>\n",
       "      <td>2.085325e+07</td>\n",
       "      <td>3.369710e+07</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>max</th>\n",
       "      <td>417859.000000</td>\n",
       "      <td>32.985763</td>\n",
       "      <td>4.250000e+08</td>\n",
       "      <td>2.781506e+09</td>\n",
       "      <td>900.000000</td>\n",
       "      <td>9767.000000</td>\n",
       "      <td>9.200000</td>\n",
       "      <td>2015.000000</td>\n",
       "      <td>4.250000e+08</td>\n",
       "      <td>2.827124e+09</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                  id    popularity        budget       revenue       runtime  \\\n",
       "count   10866.000000  10866.000000  1.086600e+04  1.086600e+04  10866.000000   \n",
       "mean    66064.177434      0.646441  1.462570e+07  3.982332e+07    102.070863   \n",
       "std     92130.136561      1.000185  3.091321e+07  1.170035e+08     31.381405   \n",
       "min         5.000000      0.000065  0.000000e+00  0.000000e+00      0.000000   \n",
       "25%     10596.250000      0.207583  0.000000e+00  0.000000e+00     90.000000   \n",
       "50%     20669.000000      0.383856  0.000000e+00  0.000000e+00     99.000000   \n",
       "75%     75610.000000      0.713817  1.500000e+07  2.400000e+07    111.000000   \n",
       "max    417859.000000     32.985763  4.250000e+08  2.781506e+09    900.000000   \n",
       "\n",
       "         vote_count  vote_average  release_year    budget_adj   revenue_adj  \n",
       "count  10866.000000  10866.000000  10866.000000  1.086600e+04  1.086600e+04  \n",
       "mean     217.389748      5.974922   2001.322658  1.755104e+07  5.136436e+07  \n",
       "std      575.619058      0.935142     12.812941  3.430616e+07  1.446325e+08  \n",
       "min       10.000000      1.500000   1960.000000  0.000000e+00  0.000000e+00  \n",
       "25%       17.000000      5.400000   1995.000000  0.000000e+00  0.000000e+00  \n",
       "50%       38.000000      6.000000   2006.000000  0.000000e+00  0.000000e+00  \n",
       "75%      145.750000      6.600000   2011.000000  2.085325e+07  3.369710e+07  \n",
       "max     9767.000000      9.200000   2015.000000  4.250000e+08  2.827124e+09  "
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.describe()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    ">From here I am able to see that budget, revenue, budget_adj, and revenue_adj have some values with '0', for these values I will fill with the mean. I also can see that some items have nulls which can be replaced with \"not available\". I should also convert the revenues floats to int. Also I can clean up the dataset a little by removing the unecessary columns.\n",
    "\n",
    "\n",
    "### Data Cleaning (Replace this with more specific notes!)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [],
   "source": [
    "#Drop the unnecessary columns\n",
    "df= df.drop(['id','imdb_id','cast','homepage','keywords','tagline','overview','release_date'],axis=1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [],
   "source": [
    "# convert float to int.\n",
    "df['budget_adj'] = df['budget_adj'].astype(int)\n",
    "df['revenue_adj'] = df['revenue_adj'].astype(int)\n",
    "\n",
    "df['budget'] = df['budget'].astype(int)\n",
    "df['revenue'] = df['revenue'].astype(int)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [],
   "source": [
    "#replace nulls with not_available\n",
    "df['director'] = df['director'].fillna('not_available')\n",
    "df['production_companies'] = df['production_companies'].fillna('not_available')\n",
    "df['genres'] = df['genres'].fillna('not_available')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {},
   "outputs": [],
   "source": [
    "df['budget']=df['budget'].replace(0,df['budget'].mean())\n",
    "\n",
    "df['revenue']=df['revenue'].replace(0,df['revenue'].mean())\n",
    "\n",
    "df['budget_adj']=df['budget_adj'].replace(0,df['budget_adj'].mean())\n",
    "\n",
    "df['revenue_adj']=df['revenue_adj'].replace(0,df['revenue_adj'].mean())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "Int64Index: 0 entries\n",
      "Data columns (total 13 columns):\n",
      "popularity              0 non-null float64\n",
      "budget                  0 non-null float64\n",
      "revenue                 0 non-null float64\n",
      "original_title          0 non-null object\n",
      "director                0 non-null object\n",
      "runtime                 0 non-null int64\n",
      "genres                  0 non-null object\n",
      "production_companies    0 non-null object\n",
      "vote_count              0 non-null int64\n",
      "vote_average            0 non-null float64\n",
      "release_year            0 non-null int64\n",
      "budget_adj              0 non-null float64\n",
      "revenue_adj             0 non-null float64\n",
      "dtypes: float64(6), int64(3), object(4)\n",
      "memory usage: 0.0+ bytes\n"
     ]
    }
   ],
   "source": [
    "# Check the results\n",
    "\n",
    "df.query('budget == \"0\"').info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>popularity</th>\n",
       "      <th>budget</th>\n",
       "      <th>revenue</th>\n",
       "      <th>runtime</th>\n",
       "      <th>vote_count</th>\n",
       "      <th>vote_average</th>\n",
       "      <th>release_year</th>\n",
       "      <th>budget_adj</th>\n",
       "      <th>revenue_adj</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>count</th>\n",
       "      <td>10866.000000</td>\n",
       "      <td>1.086600e+04</td>\n",
       "      <td>1.086600e+04</td>\n",
       "      <td>10866.000000</td>\n",
       "      <td>10866.000000</td>\n",
       "      <td>10866.000000</td>\n",
       "      <td>10866.000000</td>\n",
       "      <td>1.086600e+04</td>\n",
       "      <td>1.086600e+04</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>mean</th>\n",
       "      <td>0.646441</td>\n",
       "      <td>2.229255e+07</td>\n",
       "      <td>6.187164e+07</td>\n",
       "      <td>102.070863</td>\n",
       "      <td>217.389748</td>\n",
       "      <td>5.974922</td>\n",
       "      <td>2001.322658</td>\n",
       "      <td>2.675459e+07</td>\n",
       "      <td>7.980243e+07</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>std</th>\n",
       "      <td>1.000185</td>\n",
       "      <td>2.801245e+07</td>\n",
       "      <td>1.110204e+08</td>\n",
       "      <td>31.381405</td>\n",
       "      <td>575.619058</td>\n",
       "      <td>0.935142</td>\n",
       "      <td>12.812941</td>\n",
       "      <td>3.050659e+07</td>\n",
       "      <td>1.365610e+08</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>min</th>\n",
       "      <td>0.000065</td>\n",
       "      <td>1.000000e+00</td>\n",
       "      <td>2.000000e+00</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>10.000000</td>\n",
       "      <td>1.500000</td>\n",
       "      <td>1960.000000</td>\n",
       "      <td>1.000000e+00</td>\n",
       "      <td>2.000000e+00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25%</th>\n",
       "      <td>0.207583</td>\n",
       "      <td>1.462570e+07</td>\n",
       "      <td>3.982332e+07</td>\n",
       "      <td>90.000000</td>\n",
       "      <td>17.000000</td>\n",
       "      <td>5.400000</td>\n",
       "      <td>1995.000000</td>\n",
       "      <td>1.755104e+07</td>\n",
       "      <td>5.136436e+07</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50%</th>\n",
       "      <td>0.383856</td>\n",
       "      <td>1.462570e+07</td>\n",
       "      <td>3.982332e+07</td>\n",
       "      <td>99.000000</td>\n",
       "      <td>38.000000</td>\n",
       "      <td>6.000000</td>\n",
       "      <td>2006.000000</td>\n",
       "      <td>1.755104e+07</td>\n",
       "      <td>5.136436e+07</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75%</th>\n",
       "      <td>0.713817</td>\n",
       "      <td>1.500000e+07</td>\n",
       "      <td>3.982332e+07</td>\n",
       "      <td>111.000000</td>\n",
       "      <td>145.750000</td>\n",
       "      <td>6.600000</td>\n",
       "      <td>2011.000000</td>\n",
       "      <td>2.085325e+07</td>\n",
       "      <td>5.136436e+07</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>max</th>\n",
       "      <td>32.985763</td>\n",
       "      <td>4.250000e+08</td>\n",
       "      <td>2.781506e+09</td>\n",
       "      <td>900.000000</td>\n",
       "      <td>9767.000000</td>\n",
       "      <td>9.200000</td>\n",
       "      <td>2015.000000</td>\n",
       "      <td>4.250000e+08</td>\n",
       "      <td>2.827124e+09</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "         popularity        budget       revenue       runtime    vote_count  \\\n",
       "count  10866.000000  1.086600e+04  1.086600e+04  10866.000000  10866.000000   \n",
       "mean       0.646441  2.229255e+07  6.187164e+07    102.070863    217.389748   \n",
       "std        1.000185  2.801245e+07  1.110204e+08     31.381405    575.619058   \n",
       "min        0.000065  1.000000e+00  2.000000e+00      0.000000     10.000000   \n",
       "25%        0.207583  1.462570e+07  3.982332e+07     90.000000     17.000000   \n",
       "50%        0.383856  1.462570e+07  3.982332e+07     99.000000     38.000000   \n",
       "75%        0.713817  1.500000e+07  3.982332e+07    111.000000    145.750000   \n",
       "max       32.985763  4.250000e+08  2.781506e+09    900.000000   9767.000000   \n",
       "\n",
       "       vote_average  release_year    budget_adj   revenue_adj  \n",
       "count  10866.000000  10866.000000  1.086600e+04  1.086600e+04  \n",
       "mean       5.974922   2001.322658  2.675459e+07  7.980243e+07  \n",
       "std        0.935142     12.812941  3.050659e+07  1.365610e+08  \n",
       "min        1.500000   1960.000000  1.000000e+00  2.000000e+00  \n",
       "25%        5.400000   1995.000000  1.755104e+07  5.136436e+07  \n",
       "50%        6.000000   2006.000000  1.755104e+07  5.136436e+07  \n",
       "75%        6.600000   2011.000000  2.085325e+07  5.136436e+07  \n",
       "max        9.200000   2015.000000  4.250000e+08  2.827124e+09  "
      ]
     },
     "execution_count": 11,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.describe()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<a id='eda'></a>\n",
    "## Exploratory Data Analysis\n",
    "\n",
    "> **Tip**: Now that you've trimmed and cleaned your data, you're ready to move on to exploration. Compute statistics and create visualizations with the goal of addressing the research questions that you posed in the Introduction section. It is recommended that you be systematic with your approach. Look at one variable at a time, and then follow it up by looking at relationships between variables.\n",
    "\n",
    "### Does the budget of a movie, affect popularity?"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 576x576 with 9 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "df.hist(figsize=(8,8));"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Use this, and more code cells, to explore your data. Don't forget to add\n",
    "#   Markdown cells to document your observations and findings.\n",
    "\n",
    "df.plot(x='budget',y='popularity',kind='scatter');"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Is there a correlation between runtime and popularity?"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "df.plot(x='r')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.axes._subplots.AxesSubplot at 0x115018fd0>"
      ]
     },
     "execution_count": 12,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Continue to explore the data to address your additional research\n",
    "#   questions. Add more headers as needed if you have more questions to\n",
    "#   investigate.\n",
    "df.plot(x='runtime', y='popularity',kind='scatter')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<a id='conclusions'></a>\n",
    "## Conclusions\n",
    "\n",
    "> **Tip**: Finally, summarize your findings and the results that have been performed. Make sure that you are clear with regards to the limitations of your exploration. If you haven't done any statistical tests, do not imply any statistical conclusions. And make sure you avoid implying causation from correlation!\n",
    "\n",
    "> **Tip**: Once you are satisfied with your work, you should save a copy of the report in HTML or PDF form via the **File** > **Download as** submenu. Before exporting your report, check over it to make sure that the flow of the report is complete. You should probably remove all of the \"Tip\" quotes like this one so that the presentation is as tidy as possible. Congratulations!"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.3"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
